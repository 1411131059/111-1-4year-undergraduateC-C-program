#include <stdio.h>
#define SIZE 10

void sort(int a[][SIZE], int size);
void swap(int* e1Ptr, int* e2Ptr);
double average(int rel[1][SIZE], int student);
double ave(int rel[][SIZE], int student);

int main(void)
{
    int key, result = 0, i;

    int a[3][SIZE] = { { 12,13,14,15,16,17,19,21,22,23},
                       { 66,67,66,70,73,74,75,75,62,32},
                       { 44,46,27,12,80,63,66,90,11,66} };

    puts("Data items in original order");
    for (i = 0; i < SIZE; ++i) 
    {
        printf("%4d", a[0][i]);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i) 
    {
        printf("%4d", a[1][i]);
    }    
    printf("\n");
    for (i = 0; i < SIZE; ++i)
    {
        printf("%4d", a[2][i]);
    }
    printf("\n");
    

    puts("");
    sort(a, SIZE);
    puts("\nData items in ascending order");

    for (i = 1; i <= SIZE; ++i)
    {
        printf("%4d. ", i);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i) 
    {
        printf("%5d ", a[0][i]);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i)
    {
        printf("%5d ", a[1][i]);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i)
    {
        printf("%5d ", a[2][i]);
    }

    puts("");
  
    printf("\n  Average: %.2lf", average(a, SIZE));
    int mid = (0 + (SIZE - 1)) / 2;
    printf("\n  MID: %d\n", a[1][mid]);
    
}

void sort(int a[][SIZE], int size)
{
    int hold, pass, i;
    for (pass = 1; pass < SIZE; ++pass) 
    {
        for (i = 0; i < size - pass; ++i) 
        {
            if (a[1][i] < a[1][i + 1]) 
            {
                swap(&a[1][i], &a[1][i + 1]);
                swap(&a[0][i], &a[0][i + 1]);
            }
        }
    }

}

void swap(int* e1Ptr, int* e2Ptr)
{
    int hold;
    hold = *e1Ptr;
    *e1Ptr = *e2Ptr;
    *e2Ptr = hold;
}

double average(int rel[1][SIZE], int student)
{
    int total = 0;
    for (int i = 0; i < student; ++i)
    {
        total += rel[1][i];
    }
    return(double)total / student;
}

/*double ave(int rel[][SIZE], int student)
{
    int total[SIZE], i, j;
    for (i = 1; i < student; i)
    {
        for (j = 0; j < student; j++)
        {
            total[i] += rel[i][j];
        }
        total[i] /= 2;
    }
    return total[i];
}*/
